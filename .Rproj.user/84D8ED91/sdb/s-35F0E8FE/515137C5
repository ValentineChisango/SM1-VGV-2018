{
    "collab_server" : "",
    "contents" : "\n\n\n#Generate normal RV\nz=rnorm(1000)\nz.=-z\n\nCrude_Monte_Carlo=function(alpha,beta,sigma,T,r0,n,s){\n  \n  # alpha, beta, sigma <- Fixed Parameters\n  # T <- maturity time\n  # r0 <- Initial rate at time 0\n  # n <- Number of Simulations\n  # s <- NUmber of Subintervals \n  \n  #Simulate interest rates\n  dt <- T/s # Length of sub-intervals\n  sim_path= matrix(0,s+1,n) # Matrix that stores rate pathways\n  sim_path[1,]= r0\n  \n  for (i in 1:n){\n    for (j in 2:(s+1)){\n      dr=alpha*(beta-sim_path[j-1,i])*dt+sigma*sqrt(dt)*rnorm(1)# Euler Discretization\n      sim_path[j,i]=sim_path[j-1,i]+dr\n    }\n  }\n  \n  # Monte Carlo Simulations\n  Sum=colSums(sim_path[2:(s+1),]*dt)\n  int=exp(-Sum)\n  mean=mean(int)\n  sd=sd(int)/sqrt(n)\n  result=c(mean,sd)\n  result\n}\n\n#################################################################################\n# Antithetic Variates\n################################################################################\n\nAntithetic_variates= function(alpha,beta,sigma,T,r0,n,s){\n  dt <- T/s # Length of sub-intervals\n  sim_path= matrix(0,s+1,n) # Matrix that stores rate pathways\n  sim_path_inv= matrix(0,nrow = s+1, ncol = n)# matrix to generate interest paths using inverse RV\n  sim_path[1,]= r0\n  sim_path_inv[1,]=r0\n \n  \n  for (i in 1:n){\n    for (j in 2:(s+1)){\n      dr=alpha*(beta-sim_path[j-1,i])*dt+sigma*sqrt(dt)*z[j-1] # Euler Discretization\n      dr_i= alpha*(beta-sim_path_inv[j-1,i])*dt + sigma*sqrt(dt)*z.[j-1]\n      sim_path[j,i]=sim_path[j-1,i]+dr\n      sim_path_inv[j,i]=sim_path_inv[j-1,i]+dr_i\n      \n    }\n  }\n  \n  # Monte Carlo Simulations\n  Sum=colSums(sim_path[2:(s+1),]*dt)\n  Sum.=colSums(sim_path_inv[2:(s+1),]*dt)\n  int.=exp(-Sum.)\n  int=exp(-Sum)\n  Average=(int+int.)/2\n  mean=mean(Average)\n  sd=sd(Average)/sqrt(n)\n  result=c(mean,sd)\n  result\n  \n}\n\n#################################################################################\n# Moment matching\n#################################################################################\n\nMoment_Matching=function(alpha,beta,sigma,T,r0,n,s){\n  \n  # alpha, beta, sigma <- Fixed Parameters\n  # T <- maturity time\n  # r0 <- Initial rate at time 0\n  # n <- Number of Simulations\n  # s <- NUmber of Subintervals \n  \n  #Simulate interest rates\n  dt <- T/s # Length of sub-intervals\n  sim_path= matrix(0,s+1,n) # Matrix that stores rate pathways\n  sim_path[1,]= r0\n  z=rnorm(s)\n  z_m= z-mean(z) \n  \n  for (i in 1:n){\n    for (j in 2:(s+1)){\n      dr=alpha*(beta-sim_path[j-1,i])*dt+sigma*sqrt(dt)*z_m[j-1]# Euler Discretization\n      sim_path[j,i]=sim_path[j-1,i]+dr\n    }\n  }\n  \n  # Monte Carlo Simulations\n  Sum=colSums(sim_path[2:(s+1),]*dt)\n  int=exp(-Sum)\n  mean=mean(int)\n  sd=sd(int)/sqrt(n)\n  result=c(mean,sd)\n  result\n}\n\n#################################################################################\n# Control Variates\n#################################################################################\n\n# We have decided to make use of the CIR model as our control variate process.\n# Below is the closed form solution under the CIR model\nbond_price_CIR <- function(alpha,beta,sigma,t,T,r0){\n  h <- sqrt(alpha^(2)+2*sigma^(2))\n  A <-(2*h*exp((alpha+h)*(T-t)/2)/(2*h+(alpha+h)*(exp((T-t)*(h))-1)))^((2*alpha*beta)/sigma^(2))\n  B <-2*(exp((T-t)*(h))-1)/(2*h+(alpha+h)*(exp((T-t)*(h))-1))\n  A*exp(-B*r0)\n}\n\n\n# Monte Carlo Simulations of Bond Price under the CIR model\n\nCIR_MC= function(alpha,beta,sigma,T,r0,n,s){\n  \n  dt <- T/s # Length of sub-intervals\n  sim_path= matrix(0,s+1,n) # Matrix that stores rate pathways\n  sim_path[1,]= r0\n  \n  for (i in 1:n){\n    for (j in 2:(s+1)){\n      dr=alpha*(beta-sim_path[j-1,i])*dt+(sigma*sqrt(dt)*rnorm(1)*sqrt(sim_path[j-1,i]))# Euler Discretization\n      sim_path[j,i]=sim_path[j-1,i]+dr\n    \n    }\n  }\n  \n  # Monte Carlo Simulations\n  Sum=colSums(sim_path[2:(s+1),]*dt)\n  int=exp(-Sum)\n  mean=mean(int)\n  sd=sd(int)/sqrt(n)\n  result=c(mean,sd)\n  result\n  \n}\n\n# Therefore the control variates estimate:\n\nControl_Variates_estimate= function(alpha, beta, sigma,t,T,r0,n,s){\n  Crude_Monte_Carlo(alpha,beta,sigma,T,r0,n,s)[1]- CIR_MC(alpha,beta,sigma,T,r0,n,s)[1]+bond_price_CIR(alpha,beta,sigma,t,T,r0)\n}\n  \n",
    "created" : 1530553843960.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4222219253",
    "id" : "515137C5",
    "lastKnownWriteTime" : 1530520704,
    "last_content_update" : 1530520704,
    "path" : "C:/Users/GeorgePark/Desktop/Bond Price.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}